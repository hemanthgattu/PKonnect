{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport * as tslib_1 from \"tslib\";\nexport var AuthErrorMessage = {\n  unexpectedError: {\n    code: \"unexpected_error\",\n    desc: \"Unexpected error in authentication.\"\n  },\n  noWindowObjectError: {\n    code: \"no_window_object\",\n    desc: \"No window object available. Details:\"\n  }\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\n\nvar AuthError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(AuthError, _super);\n\n  function AuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorMessage) || this;\n\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.errorCode = errorCode;\n    _this.errorMessage = errorMessage;\n    _this.name = \"AuthError\";\n    return _this;\n  }\n\n  AuthError.createUnexpectedError = function (errDesc) {\n    return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\n  };\n\n  AuthError.createNoWindowObjectError = function (errDesc) {\n    return new AuthError(AuthErrorMessage.noWindowObjectError.code, AuthErrorMessage.noWindowObjectError.desc + \" \" + errDesc);\n  };\n\n  return AuthError;\n}(Error);\n\nexport { AuthError };","map":null,"metadata":{},"sourceType":"module"}