{"version":3,"sources":["Content/images/Communities_WelcomeScreen.png","components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","authProvider.js","services/GraphService.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavMenu","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","key","value","setState","react_default","a","createElement","reactstrap_es","className","light","tag","Link","to","onClick","isOpen","navbar","Component","displayName","name","Layout","apply","arguments","fluid","children","Home","src","background","alt","id","user","account","type","rows","cols","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","_populateWeatherData","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","stop","aria-labelledby","map","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","authProvider","MsalAuthProvider","auth","authority","clientId","cache","cacheLocation","storeAuthStateInCookie","scopes","LoginType","Popup","require","App","isLoading","getAccount","login","dist","provider","forceLogin","_ref","authenticationState","accountInfo","Layout_Layout","AuthenticationState","Authenticated","Fragment","Route","exact","path","render","Home_Home","assign","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","BrowserRouter","basename","App_App","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0TCK3BC,SAAb,SAAAC,GAGE,SAAAD,EAAaE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAClBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKU,MAAQ,CACXC,WAAW,GALKX,EAHtB,OAAAC,OAAAW,EAAA,EAAAX,CAAAJ,EAAAC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAJ,EAAA,EAAAiB,IAAA,eAAAC,MAAA,WAaIZ,KAAKa,SAAS,CACZL,WAAYR,KAAKO,MAAMC,cAd7B,CAAAG,IAAA,SAAAC,MAAA,WAmBI,OACEE,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,UAAU,+EAA+EC,OAAK,GACpGL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaG,IAAKC,IAAMC,GAAG,KAA3B,eACAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeM,QAASvB,KAAKI,aAAcc,UAAU,SACrDJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,uCAAuCM,QAASxB,KAAKO,MAAMC,UAAWiB,QAAM,GAC9FX,EAAAC,EAAAC,cAAA,MAAIE,UAAU,wBACZJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASG,IAAKC,IAAMH,UAAU,YAAYI,GAAG,KAA7C,SAEFR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASG,IAAKC,IAAMH,UAAU,YAAYI,GAAG,YAA7C,YAEFR,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASG,IAAKC,IAAMH,UAAU,YAAYI,GAAG,eAA7C,wBAlClB5B,EAAA,CAA6BgC,cAAhBhC,EACJiC,YAAcjC,EAAQkC,KCDxB,IAAMC,EAAb,SAAAlC,GAAA,SAAAkC,IAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,GAAA/B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAAC,MAAA9B,KAAA+B,YAAA,OAAAjC,OAAAW,EAAA,EAAAX,CAAA+B,EAAAlC,GAAAG,OAAAY,EAAA,EAAAZ,CAAA+B,EAAA,EAAAlB,IAAA,SAAAC,MAAA,WAIQ,OACIE,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWe,OAAK,GACZlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,UAAQjB,KAAKJ,MAAMqC,iBAT3CJ,EAAA,CAA4BH,aAAfG,EACFF,YAAcE,EAAOD,0BCFnBM,SAAb,SAAAvC,GAAA,SAAAuC,IAAA,OAAApC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAApC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAAJ,MAAA9B,KAAA+B,YAAA,OAAAjC,OAAAW,EAAA,EAAAX,CAAAoC,EAAAvC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAoC,EAAA,EAAAvB,IAAA,SAAAC,MAAA,WAIQ,OACIE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKmB,IAAKC,IAAYC,IAAI,aAE9BvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,uBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,uDAGRJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,OAAKsB,GAAG,gBACJxB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBAAYhB,KAAKJ,MAAM2C,KAAKC,QAAQZ,QAG5Cd,EAAAC,EAAAC,cAAA,OAAKsB,GAAG,YACJxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0CAGAF,EAAAC,EAAAC,cAAA,sIAGAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,MAAIsB,GAAG,YAAP,oBAGAxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAW7B,MAAM,gBAC7BE,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAW7B,MAAM,eAC7BE,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAW7B,MAAM,aAC9BE,EAAAC,EAAAC,cAAA,0BAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAW7B,MAAM,eAC7BE,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,WAAW7B,MAAM,cAC7BE,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,UAAQJ,MAAM,UACdE,EAAAC,EAAAC,cAAA,UAAQJ,MAAM,aAAd,uBAEJE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YAAUsB,GAAG,WAAWI,KAAK,IAAIC,KAAK,OAEtC7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kCAvEpCkB,EAAA,CAA0BR,cAAbQ,EACFP,YAAcO,EAAKN,KCHvB,IAAMgB,EAAb,SAAAjD,GAGE,SAAAiD,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACjB/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMJ,KACDW,MAAQ,CAAEsC,UAAW,GAAIC,SAAS,GAFtBjD,EAHrB,OAAAC,OAAAW,EAAA,EAAAX,CAAA8C,EAAAjD,GAAAG,OAAAY,EAAA,EAAAZ,CAAA8C,EAAA,EAAAjC,IAAA,oBAAAC,MAAA,WASIZ,KAAK+C,wBATT,CAAApC,IAAA,SAAAC,MAAA,WAsCI,IAAIoC,EAAWhD,KAAKO,MAAMuC,QACtBhC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACH4B,EAAUK,qBAAqBjD,KAAKO,MAAMsC,WAE9C,OACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIsB,GAAG,cAAP,oBACAxB,EAAAC,EAAAC,cAAA,uEACCgC,KA9CT,CAAArC,IAAA,sBAAAC,MAAA,eAAAsC,EAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,EAAArC,EAAAsC,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAArC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAoD2BC,MAAM,mBApDjC,cAoDUN,EApDVG,EAAAI,KAAAJ,EAAAE,KAAA,EAqDuBL,EAASQ,OArDhC,OAqDUP,EArDVE,EAAAI,KAsDI9D,KAAKa,SAAS,CAAEgC,UAAWW,EAAMV,SAAS,IAtD9C,wBAAAY,EAAAM,SAAAV,EAAAtD,SAAA,yBAAAkD,EAAApB,MAAA9B,KAAA+B,YAAA,OAAApB,IAAA,uBAAAC,MAAA,SAY8BiC,GAC1B,OACE/B,EAAAC,EAAAC,cAAA,SAAOE,UAAU,sBAAsB+C,kBAAgB,cACrDnD,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,aACG6B,EAAUqB,IAAI,SAAAC,GAAQ,OACrBrD,EAAAC,EAAAC,cAAA,MAAIL,IAAKwD,EAASC,MAChBtD,EAAAC,EAAAC,cAAA,UAAKmD,EAASC,MACdtD,EAAAC,EAAAC,cAAA,UAAKmD,EAASE,cACdvD,EAAAC,EAAAC,cAAA,UAAKmD,EAASG,cACdxD,EAAAC,EAAAC,cAAA,UAAKmD,EAASI,kBA7B5B3B,EAAA,CAA+BlB,aAAlBkB,EACJjB,YAAciB,EAAUhB,KCD1B,IAAM4C,EAAb,SAAA7E,GAGE,SAAA6E,EAAY5E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACjB3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMJ,KACDW,MAAQ,CAAEkE,aAAc,GAC7B5E,EAAK6E,iBAAmB7E,EAAK6E,iBAAiBrE,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHPA,EAHrB,OAAAC,OAAAW,EAAA,EAAAX,CAAA0E,EAAA7E,GAAAG,OAAAY,EAAA,EAAAZ,CAAA0E,EAAA,EAAA7D,IAAA,mBAAAC,MAAA,WAUIZ,KAAKa,SAAS,CACZ4D,aAAczE,KAAKO,MAAMkE,aAAe,MAX9C,CAAA9D,IAAA,SAAAC,MAAA,WAgBI,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,2DAEAF,EAAAC,EAAAC,cAAA,KAAG2D,YAAU,UAAb,kBAAqC7D,EAAAC,EAAAC,cAAA,cAAShB,KAAKO,MAAMkE,eAEzD3D,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBK,QAASvB,KAAK0E,kBAAlD,kBAxBRF,EAAA,CAA6B9C,aAAhB8C,EACJ7C,YAAc6C,EAAQ5C,iBCDlBgD,EAAe,IAAIC,mBAC5B,CACIC,KAAM,CACFC,UAAW,2CACXC,SAAU,wCAEdC,MAAO,CACHC,cAAe,iBACfC,wBAAwB,IAGhC,CACIC,OAAQ,CAAC,yCAGbC,YAAUC,OCjBFC,EAAQ,QCUCC,cAEjB,SAAAA,EAAY5F,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACf3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMJ,KAEDW,MAAQ,CACTkF,WAAW,EACXlD,KAAM,MAGCqC,EAAac,aART,OAAA7F,+LAkBT+E,EAAae,sIAQnB,OACI7E,EAAAC,EAAAC,cAAC4E,EAAA,QAAD,CAASC,SAAUjB,EAAckB,YAAY,GAErC,SAAAC,GAA0C,IAAvCC,EAAuCD,EAAvCC,oBAAqBC,EAAkBF,EAAlBE,YACpB,OACInF,EAAAC,EAAAC,cAACkF,EAAD,KAEQF,IAAwBG,sBAAoBC,eAC5CtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMsF,SAAP,KACIvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC7G,GAAD,OAC1BkB,EAAAC,EAAAC,cAAC0F,EAAD5G,OAAA6G,OAAA,GAAU/G,EAAV,CAAiB2C,KAAM0D,QAC3BnF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,WAAWI,UAAWpC,IAClC1D,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,+BAA+BI,UAAWhE,eAxC7DlB,aAAZ8D,EACV7D,YAAc6D,EAAI5D,KCD7B,IAAMiF,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BJ,SAASC,EAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpH,QACf8G,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KC/DjE,IAAMC,EAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,EAAcH,SAASI,eAAe,QAE5CC,IAAShC,OACP3F,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAeC,SAAUR,GACvBrH,EAAAC,EAAAC,cAAC4H,EAAD,OAEFL,GDMa,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,GAAwB/B,OAAOC,UAC3C+B,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAA6B,OAAMH,GAAN,sBAEPjC,EAwCV,SAAkCO,GAEhCvD,MAAMuD,GACHI,KAAK,SAAAjE,GAGkB,MAApBA,EAAS2F,SACuD,IAAhE3F,EAAS4F,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BT,OAAOC,SAASwC,aAKpBrC,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEA5DAyB,CAAwBrC,GAGxBD,EAAgBC,MCvBxBsC","file":"static/js/main.ac179359.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Communities_WelcomeScreen.f96c95a2.png\";","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">PKonnect.UI</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n    static displayName = Layout.name;\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col>  {this.props.children}</Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport background from '../Content/images/Communities_WelcomeScreen.png';\r\nimport '../styles/profile-page.css';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-9\">\r\n                    <div className=\"image\">\r\n                        <img src={background} alt=\"Welcome\" />\r\n                    </div>\r\n                    <div className=\"centered\">\r\n                        <div className=\"CenterLine1\"> Community Building</div>\r\n                        <div className=\"CenterLine2\"> A new PK digital community is coming Summer 2020</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                    <div id=\"welcometitle\">\r\n                        <h5>\r\n                            <h1>Hello, {this.props.user.account.name}</h1>\r\n                        </h5>\r\n                    </div>\r\n                    <div id=\"formdata\">\r\n                        <div className=\"row\">\r\n                            <div >\r\n                                <div >\r\n                                    <h3>\r\n                                        Help us build your community\r\n                    </h3>\r\n                                    <div>\r\n                                        Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum Lorem ipsum\r\n                    </div>\r\n                                    <br />\r\n\r\n                                    <h3 id=\"RedColor\">\r\n                                        Share your ideas\r\n                    </h3>\r\n                                    <br />\r\n                                    <h6>Which of the following are important to you?</h6>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"SkillSerach\" />\r\n                                        <label>SkillSerach</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"NetWorking\" />\r\n                                        <label>NetWorking</label>\r\n                                    </div>\r\n                                    <div><input type=\"checkbox\" value=\"Training\" />\r\n                                        <label>Training</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"Mentorship\" />\r\n                                        <label>Mentorship</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"Knowledge\" />\r\n                                        <label>Knowledge</label>\r\n                                    </div>\r\n\r\n                                    <br />\r\n                                    <h6>Here is where another question?</h6>\r\n                                    <select>\r\n                                        <option value=\"Empty\"></option>\r\n                                        <option value=\"questions\">few more questions</option>\r\n                                    </select>\r\n                                    <br />\r\n                                    <br />\r\n                                    <h6>Feedback</h6>\r\n                                    <textarea id=\"comments\" rows=\"5\" cols=\"40\">\r\n                                    </textarea>\r\n                                    <br />\r\n                                    <br />\r\n                                    <button>Submit</button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { MsalAuthProvider, LoginType } from 'react-aad-msal';\n\nexport const authProvider = new MsalAuthProvider(\n    {\n        auth: {\n            authority: \"https://login.microsoftonline.com/common\",\n            clientId: \"870244e3-2770-4ab1-84f3-fb91d35111e5\" //Application (client) ID from Overview blade in App Registration\n        },\n        cache: {\n            cacheLocation: 'sessionStorage',\n            storeAuthStateInCookie: true,\n        },\n    },\n    {\n        scopes: ['https://graph.microsoft.com/.default']\n    },\n\n    LoginType.Popup\n);\n","var graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken) {\r\n    // Initialize Graph client\r\n    const client = graph.Client.init({\r\n        // Use the provided access token to authenticate\r\n        // requests\r\n        authProvider: (done) => {\r\n            done(null, accessToken.accessToken);\r\n        }\r\n    });\r\n\r\n    return client;\r\n}\r\n\r\nexport async function getUserDetails(userId, accessToken) {\r\n\r\n    const client = getAuthenticatedClient(accessToken);\r\n\r\n    const user = await client.api('/' + userId).get();\r\n\r\n    return user;\r\n}\r\n\r\nexport async function getUserPhoto(userId, accessToken) {\r\n\r\n    var url = 'https://graph.microsoft.com/v1.0/' + userId + '/photo/$value';\r\n\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: 'Bearer ' + accessToken.accessToken,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { authProvider } from './authProvider';\r\nimport { AzureAD, AuthenticationState } from 'react-aad-msal';\r\nimport { getUserDetails, getUserPhoto } from './services/GraphService';\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            user: null\r\n        };\r\n\r\n        var user = authProvider.getAccount();\r\n\r\n        //if (user) {\r\n\r\n        //    this.getMyProfile();\r\n        //}\r\n    }\r\n\r\n    async login() {\r\n\r\n        await authProvider.login();\r\n\r\n       // await this.getMyProfile();\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n        return (\r\n            <AzureAD provider={authProvider} forceLogin={true}>\r\n                {\r\n                    ({ authenticationState, accountInfo }) => {\r\n                        return (\r\n                            <Layout>\r\n                                {\r\n                                    authenticationState === AuthenticationState.Authenticated &&\r\n                                    <React.Fragment>\r\n                                        <Route exact path='/' render={(props) =>\r\n                                            <Home {...props} user={accountInfo} />} />\r\n                                        <Route path='/counter' component={Counter} />\r\n                                        <Route path='/fetch-data/:startDateIndex?' component={FetchData} />\r\n                                    </React.Fragment>\r\n                                }\r\n                            </Layout>\r\n                        );\r\n                    }\r\n                }\r\n            </AzureAD>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}